*** SELF TEST EXERCISES***

1. Determine the value, true or false, of each of the following Boolean
expressions, assuming that the value of the variable count is 0 and the
value of the variable limit is 10. Give your answer as one of the values
true or false.
    a. (count == 0) && (limit < 20)  true
    b. count == 0 && limit < 20 true
    c. (limit > 20) || (count < 5) true
    d. !(count == 12) true
    e. (count == 1) && (x < y) false
    f. (count < 10) || (x < y) true
    g. !( ((count < 10) || (x < y)) && (count >= 0) ) ?true??
    h. ((limit/count) > 7) || (limit < 20) true
    i. (limit < 20) || ((limit/count) > 7) true
    j. ((limit/count) > 7) && (limit < 0) false
    k. (limit < 0) && ((limit/count) > 7) false
    l. (5 && 7) + (!6) error
    
2. Name two kinds of statements in C++ that alter the order in which actions
are performed. Give some examples.
unary operators like +,-, ++, -- and !
ex. for (i = 1; i> 10; i++)
4! + 3 > 1

3. In college algebra we see numeric intervals given as
2 < x < 3
In C++ this interval does not have the meaning you may expect. Explain
and give the correct C++ Boolean expression that specifies that x lies
between 2 and 3.
2<x && x< 3

4. Does the following sequence produce division by zero?
j = −1;
if ((j > 0) && (1/(j + 1) > 10))
cout << i << endl;   

Redid: 
#include <iostream>
using namespace std;

int main(){
    int j = -1;
    if ((j > 0) && (1/(j + 1) > 10))
        cout << true << endl; 
    else
        cout<< false<< endl;

}

answer = 0 - false so yes, division by 0

5. What is the output?
#include <iostream>
using namespace std;

int main()
{
    int x = 2;
    cout << "start\n";
    
    if (x <= 3)
        cout <<"Hello from the 2nd if" <<endl;
    else
        cout <<"Hello from else" <<endl;
    cout <<"end"<<endl;
    
    cout <<"start again"<<endl;
    
    if (x>3)
        if (x!=0)
            cout <<"hello from 2nd if" <<endl;
        else
            cout <<"hello from the else" <<endl;
    cout <<"end again"<<endl;        
}
- start
hello from the 2nd if
end
start again
end again


6. What is the output?
#include <iostream>
using namespace std;

int main()
{
    int extra = 2;
    if (extra <0)
        cout <<"small"<<endl;
    else if (extra ==0)
        cout <<"medium"<<endl;
    else
        cout <<"large"<<endl;
    
}
- large


7. If extra changed to -37 in problem 6
  - then output would be small
  
  
8  If extra changed to 0 in problem 6
  - then output would be medium

9. What output will be produced by the following code, when embedded in
a complete program?
    int x = 200;
    cout << "Start\n";
    if (x < 100)
        cout << "First Output.\n";

    else if (x > 10)
        cout << "Second Output.\n";
    else
        cout << "Third Output.\n";
    cout << "End\n";

Start
Second Output
End

10. What would be the output in Self-Test Exercise 9 if the Boolean expression
(x > 10) were changed to (x > 100)?
Be the same, 200 still bigger than 10 and 100


11. What output will be produced by the following code, when embedded in
a complete program?

int x = SOME_CONSTANT;
cout << "Start\n";
if (x < 100)
    cout << "First Output.\n";
else if (x > 100)
    cout << "Second Output.\n";
else
    cout << x << endl;
cout << "End\n";

SOME_CONSTANT is a constant of type int. Assume that neither "First
Output" nor "Second Output" is output. So, you know the value of x is
output.

depending on what SOME_CONSTANT is. It will always print start and end. 
but given the last statement
Start
x
End


12. Write a multiway if-else statement that classifies the value of an
int variable n into one of the following categories and writes out an
appropriate message:

n < 0 or 0 ≤ n ≤ 100 or n > 100

#include<iostream>
using namespace std;

int main(){
    int n;
    cout<<"Need user input for number "<< endl;
    cin>> n;
    
cout << "Start\n";
if (n < 0)
    cout << "It's negative.\n";
else if (0 <= n || n <= 100)
    cout << "Between 0 and 100.\n";
else
    cout << "Bigger than 100" << endl;
cout << "End\n";
}


13. Given the following declaration and output statement, assume that this
has been embedded in a correct program and is run. What is the output?
enum Direction { N, S, E, W };
//...
cout << W << " " << E << " " << S << " " << N << endl;

//won't look at enums

14. Given the following declaration and output statement, assume that this
has been embedded in a correct program and is run. What is the output?
enum Direction { N = 5, S = 7, E = 1, W };
// ...
cout << W << " " << E << " " << S << " " N << endl;
//won't work with enums 

15. What is the output?
  #include <iostream>
using namespace std;

int main()
{
    int firstchoice = 1;
    switch (firstchoice+1)
{
    case 1:
        cout<<"roast beef"<<endl;
        break;
    case 2:
        cout<<"roast worms"<<endl;
        break;
    case 3:
        cout <<"chocolate ice cream"<<endl;
        break;
    default:
        cout<<"eat up"<<endl;
}    
    
}

- roast worms

16. What would the output be if the first line was changed to
int firstChoice = 3;

Eat up

17. What if it was changed to
int firstChoice=2;

Choclate ice cream


18. What about int firstChoice=4;
Eat up

19. What is the output of the code?
#include <iostream>
using namespace std;

int main()
{
    int number = 22;
{
    int number = 42;
    cout << number << " ";
    //this goes first since it's paired and complete in its own bracket
}
cout << number;   
}

42 22


20. Correct the problem
#include <iostream>
using namespace std;

int main()
{
    int x = 1;
    cout << x << endl;
{

    cout << x << endl;
    int x = 2;
    cout << x << endl;
{
    cout << x << endl;
    int x = 3;
    cout << x << endl;
}
    cout << x << endl;
}
    cout << x << endl;
}

it prints 
3
2
1

It's a little hard to read but whatever




21. What is the output?
#include <iostream>
using namespace std;

int main()
{
    int count = 3;
    while (count-- > 0)
    cout << count << " ";
}
2 1 0 

22. What is the output?
#include <iostream>
using namespace std;

int main()
{
    int count = 3;
    while (--count > 0)
    cout << count << " ";
}
2 1

23. What is the output?
#include <iostream>
using namespace std;

int main()
{
    int n = 1;
    do
        cout << n << " ";
    while (n++ <= 3);
}

1 2 3 4

24. What is the output?
#include <iostream>
using namespace std;

int main()
{
    int n = 1;
    do
        cout << n << " ";
    while (++n <= 3);
}

1 2 3 

25. What is the output?
#include <iostream>
using namespace std;

int main()
{
    for (int count = 1; count < 5; count++)
    cout << (2 * count) << " ";
}

2 4 6 8

26. What is the output?
#include <iostream>
using namespace std;

int main()
{
    for (int n = 10; n > 0; n = n - 2)
{
    cout << "Hello ";
    cout << n << endl;
}
}

Hello 8
Hello 6
Hello 4
Hello 2

27. What is the output?
#include <iostream>
using namespace std;

int main()
{
    for (double sample = 2; sample > 0; sample = sample - 0.5)
    cout << sample << " ";
}

2 
1.5
1
0.5



28. Determine what kind of loop works best?
    a. Summing a series, such as 1/2 + 1/3 + 1/4 + 1/5 + … + 1/10.
    b. Reading the list of exam scores for one student
    c. Reading number of sick days taken by employees in a department
    d. Testing a function to see how it performs for different values of its arguments
    
    for loops for all. 
    
    
29.  Rewrite into a for loop
a. int i = 1;
while (i <= 10)
{
if (i < 5 && i != 2)
cout << 'X';
i++;
}

#include <iostream>
using namespace std;

int main()
{
    for (int i = 1; i<10; i++)
    if (i < 5 && i != 2)
        cout << 'X';

    
b. int i = 1;
while (i <= 10)
{
cout << 'X';
i = i + 3;
}

#include <iostream>
using namespace std;

int main()
{
    for (int i = 1; i<=10; i = i+3)
 
        cout << 'X';
}


30. What is the output of this loop? Identify value of n and value of variable log.
    #include <iostream>
using namespace std;

int main()
{
    int n = 1024;
    int log = 0;
    for (int i = 1; i < n; i = i * 2)
    log++;
    cout << n << " " << log << endl;
}

1024 10

31. What is the output?
#include <iostream>
using namespace std;

int main()
{
    int n = 1024;
    int log = 0;
    for (int i = 1; i < n; i = i * 2);  //has semicolon at the end of for loop. Iterates once
        log++;
    cout << n << " " << log << endl;
}

1024 1

32. What is the output?
#include <iostream>
using namespace std;

int main()
{
    int n = 1024;
    int log = 0;
    for (int i = 0; i < n; i = i * 2)
        log++;
    cout << n << " " << log << endl;
}
1024 0
Should be anyways log 0
broke the compiler


34. What is the output?
#include <iostream>
using namespace std;

int main()
{
    int n = 5;
    while (--n > 0)
{
    if (n == 2)
        break;
    cout << n << " ";
}
    cout << "End of Loop.";
}


4 3 End of Loop

35. What does a break statement do? Where is it legal to put one?
    in a switch statement, you put it after every condition
    in a for/while loop, you put it as a way to break out of the loop if a specific condition is met
    
    
36. Write a loop that will write Hello ten times on the screen
#include <iostream>
using namespace std;

int main()
{
    for (int i = 1; i <= 10; i++)
        cout<< "Hello" <<endl;
}


37. Write a loop that will read even numbers and compute the sum of that list
#include <iostream>
using namespace std;

int main()
{
    int number, sum = 0, count = 0;
    cout<< "Enter 3 even numbers to be added" << endl;
    
    while(++count <=3){
        cin>> number;
        
        if (!(number%2 ==0)){
            cout <<"You didn't follow the rules \n"
                << "I said even numbers"<< endl;
            break;
        }
        
        sum = sum+number;
        cout <<sum<<endl;
    }
}

38. What is the output?
#include <iostream>
using namespace std;

int main()
{
    int n, m;
    for (n = 1; n <= 10; n++)
        for (m = 10; m >= 1; m--)
            cout << n << " times " << m
                << " = " << n * m << endl;
}

It is a multiplication table of acending first number starting from 1 and ending at 10 
and decending 2nd number starting with 10 and ending at 1

so like
1x10
1x9
1x8
..
.
..
2x10
2x9
2x8
..



39. What does it mean to trace a variable?
To watch the variable change while the program is running

40. What is an off by one loop error?
Like how you can't iterate the very last number
you have to always do +1 to include the whole range

41. You have a fence that is to be 100 meters long. Your fence posts are to
be placed every 10 feet. How many fence posts do you need? Why is
the presence of this problem in a programming book not as silly as it
might seem? What problem that programmers have does this question
address?

You need 11 posts. It is a common problem















































