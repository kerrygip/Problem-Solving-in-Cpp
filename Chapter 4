*****SELF TEST EXERCISES***********

1. Determine the value of these expression 
sqrt(16.0) = 4
sqrt(16)  = 4
pow(2.0, 3.0) = 8
pow(2, 3) = 8
pow(2.0, 3) = 8
pow(1.1, 2) = 1.21
abs(3) = 3
abs(−3) = 3
abs(0) = 0
fabs(−3.0) = 3 
fabs(−3.5) = 3.5 
fabs(3.5) = 3.5
ceil(5.1) = 6
ceil(5.8) = 6
floor(5.1) = 5
floor(5.8) = 5
pow(3.0, 2)/2.0 = 4.5
pow(3.0, 2)/2 = 4.5
7/abs(−2) = 3.5
(7 + sqrt(4.0))/3.0 = 3
sqrt(pow(3, 2)) = 3

2. Convert into c++
  a. sqrt( x+y)
  b. pow (x, (y+7))
  c. sqrt (area + fudge)
  d. (sqrt(time + tide))/ nobody
  e. -b + (sqrt(pow(b,2)) - (4*a*c))/ (2*a)
  f. abs(x-y)
  
 3. Write a c++ program to compute the sqrt of PI. Use const double PI
 #include<iostream>
#include<cmath>
using namespace std;

int main(){
    double PI;
    cout << sqrt(PI) << endl;
}
// it output 0?

4. Write programs 
  a. Determine whether or not compiler will allow #include<iostream> anywhere on the line or
    if # needs to be flush against the wall
      - online compiler allows
   b. Determine if your compiler will aloow space between include  
      - online compiler allows
      
      
////UNDERSTANDING FUNCTIONS////////

#include<iostream>
#include <cmath>
using namespace std;

//declare the function first
double totalCost(int numberPar, double pricePar);
// formal parameters
//pass by value

int main(){
    int number;
    double price, bill;
    
    
    cout << "enter number of items" << endl;
    cin >> number;
    cout<<"enter price"<< endl;
    cin>> price; 
    
    bill = totalCost(number,price);
    
    //This part gives extra 0 at end of decimal to make it look proper
    cout.setf(ios::fixed);
    cout.setf(ios::showpoint);
    cout.precision(2);
    // this section gives the extra 0 at the end of the decimal 
    cout << number <<" items at "
        <<"$" << price<< " each\n"
        <<"Final bill, with tax ix $" << bill<< endl;
}

double totalCost(int numberPar, double pricePar){
    double TAX_RATE = 0.05;
    double subtotal;
    
    subtotal = pricePar* numberPar;
        return (subtotal + subtotal* TAX_RATE);
}


5. What is the output?
#include <iostream>
using namespace std;

char mystery(int firstPar, int secondPar);
int main()
{
    cout << mystery(10, 9) << "ow\n";
    return 0;
}
    char mystery(int firstPar, int secondPar)
{
    if (firstPar >= secondPar)
        return 'W';
    else
        return 'H';
}

- Wow

6. Write a function declaration and a function definition for a function that
takes three arguments, all of type int, and that returns the sum of its three
arguments.

// oh man this was tough 
#include <iostream>
using namespace std;

int addition(int firstPar, int secondPar, int thirdPar);
int main()
{
    int first,second,third, total;
    cout << "give me three numbers to add: " << endl;
    cin >> first;
    cin >> second;
    cin >> third;
    total = addition(first, second,third);
    cout << "Total out of three numbers is " << total << endl;
}
    
    int addition(int firstPar, int secondPar, int thirdPar){
        int sum = firstPar + secondPar + thirdPar;
        return sum;
    }


7. Write a function declaration and a function definition for a function
that takes one argument of type int and one argument of type double,
and that returns a value of type double that is the average of the two
arguments.

#include<iostream>
using namespace std;

//Write a function declaration and a function definition for a function
//that takes one argument of type int and one argument of type double,
//and that returns a value of type double that is the average of the two
//arguments.

double average(int argumentOne, double argumentTwo);

int main(){
    // where you have to pass by value 
    double numberOne, numberTwo, total; 
    cout <<"enter two numbers " << endl;
    cin >> numberOne;
    cin>> numberTwo;
    total = (numberOne + numberTwo)/2;
    cout << "the average of the two numbers is " << total << endl;
}

double average(int argumentOne, double argumentTwo){
    double average = (argumentOne+ argumentTwo)/ 2;
    return average; 
}

8. Write a function declaration and a function definition for a function that
takes one argument of type double. The function returns the character
value 'P' if its argument is positive and returns 'N' if its argument is zero
or negative.
// except I didn't get it to go where it would print P or N? 
#include<iostream>
using namespace std;

char positiveTest(double number);

int main(){
    // where you have to pass by value 
    int n1;
    cout <<"enter a number" << endl;
    cin >> n1;
    
}

char positiveTest(double number)
{
if (number > 0)
    return 'P';
else
    return 'N';
}



9. Describle the call by value mechanism
  - It is a substitution process done with the formal parameters that is declared before main
  - The values of the arguments are plugged in to the formal parameters
  - Values are plugged in, not the variables themselves
  - First argument is plugged into the first formal parameter and so on
  - When an argument is plugged in for a formal parameter, argument is plugged in for all instances of the formal paramter
  
10. List the similarities and differences between use of a predefined (that is,
library) function and a user-defined function.
  Predefined Library : it is something that is already made and established, like PI, usually are constants since they've always existed
  User Defined Function: Something that you make that is applicable specifically in your program. 


11. Write a function definition for a function called inOrder that takes three
arguments of type int. The function returns true if the three arguments
are in ascending order; otherwise, it returns false. For example, inOrder
(1, 2, 3) and inOrder(1, 2, 2) both return true, while inOrder(1, 3, 2)
returns false.
#include <iostream>
using namespace std;

int inOrder(int n1, int n2, int n3);

int main(){
    int num1, num2,num3, order;
    cout <<"give me three numbers " << endl;
    cin>> num1;
    cin>>num2;
    cin >> num3
    bool(); // something goes here to connect it. This seems to be my weakest link
    
}

int inOrder(int n1, int n2, int n3){
    if (n1 <n2 && n2<n3)
        return true;
    else 
        return false; 
}    

12. Write a function definition for a function called even that takes one
argument of type int and returns a bool value. The function returns true
if its one argument is an even number; otherwise, it returns false.
#include<iostream>
using namespace std;

int even(int n1);

int main(){
    int num1;
    cout <<"give me a number " << endl;
    cin>> num1;
    cout << "your numbers are " << /*call the bool here <<*/ endl;
    
}

int even(int n1){
    if (n1 %2 ==0)
        return true;
    else 
        return false; 
}



13. Write a function definition for a function isDigit that takes one argument
of type char and returns a bool value. The function returns true if the
argument is a decimal digit; otherwise, it returns false.

int isDigit(char n1);

int main(){
    int num1;
    cout <<"give me a number " << endl;
    cin>> num1;
    cout << "your numbers are " << /*call the bool here <<*/ endl;
    
}
// there's something that shows decimals. like precision??
int isDigit(int n1){
    if (n1 %2 ==0)
        return false;
    else 
        return true; 
}

14. Write a function definition for a function isRootOf that takes two arguments
of type int and returns a bool value. The function returns true if the first
argument is the square root of the second; otherwise, it returns false.

#include<iostream>
#include<cmath>
using namespace std; 
int isRootOf(int n1, int n2);

int main(){
    int num1, num2;
    cout <<"give me a number " << endl;
    cin>> num1;
    cout << "your numbers are " << /*call the bool here <<*/ endl;
    
}

int isRootOf(int n1, int n2){
    if (sqrt(n1) == n2)
        return true;
    else 
        return false; 
}




15. 





















